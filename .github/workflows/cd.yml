name: CD MagnetoApp

on:
  push:
    branches:
      - ML-deploying-app
    tags:
      - v[0-9].[0-9].[0-9]
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      API_DIR: app/
      INFRASTRUCTURE_DIR: infrastructure/
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      IMAGE_REPO_NAME: ${{ secrets.IMAGE_REPO_NAME }}
      BACKEND_ECR_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          driver-opts: "image=moby/buildkit:v0.10.5"

      - name: Build and push docker image to Amazon ECR
        id: build-push-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.IMAGE_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
          IMAGE_TAG_LATEST: latest
        uses: docker/build-push-action@v2
        with:
          platforms: linux/x86_64
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} , ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG_LATEST }}
          push: true

      - name: Init Terraform
        run: |
          terraform init \
            -backend-config="key=tfstate/${{ env.IMAGE_REPO_NAME }}.tfstate" \
            -reconfigure
        working-directory: ./${{ env.INFRASTRUCTURE_DIR }}

      - name: Plan Terraform
        env:
          TF_VAR_IMAGE_TAG: ${{ steps.build-push-image.outputs.digest }}
        run: |
          terraform plan \
              -var="app_name=${{ env.IMAGE_REPO_NAME }}" \
              -var="image_tag=${{ env.TF_VAR_IMAGE_TAG }}" \
              -var="image_uri=${{ env.BACKEND_ECR_URI }}" \
              -out=tfplan
        working-directory: ./${{ env.INFRASTRUCTURE_DIR }}

      - name: Apply Terraform
        env:
          TF_VAR_IMAGE_TAG: ${{ steps.build-push-image.outputs.digest }}
        run: |
          terraform apply -auto-approve tfplan
        working-directory: ./${{ env.INFRASTRUCTURE_DIR }}
